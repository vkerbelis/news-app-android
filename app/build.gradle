apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'quality.gradle'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.aaschmid:gradle-cpd-plugin:1.0'
    }
}
repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}
android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.example.newsapp"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release
    }
    Properties properties = new Properties()
    File propertiesFile = project.rootProject.file('signing.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
        if (properties.containsKey('STORE_FILE')
                && properties.containsKey('STORE_PASSWORD')
                && properties.containsKey('KEY_ALIAS')
                && properties.containsKey('KEY_PASSWORD')) {
            signingConfigs.release.storeFile = file(properties['STORE_FILE'])
            signingConfigs.release.storePassword = properties['STORE_PASSWORD']
            signingConfigs.release.keyAlias = properties['KEY_ALIAS']
            signingConfigs.release.keyPassword = properties['KEY_PASSWORD']
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    lintOptions {
        disable 'InvalidPackage', 'PrivateResource', 'MissingTranslation'
        abortOnError false
    }
}

dependencies {
    ext.support_version = "26.0.2"
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$support_version"

    compile 'com.jakewharton.timber:timber:4.3.1'

    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }
    debugCompile 'com.facebook.stetho:stetho:1.4.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'
    debugCompile 'com.facebook.stetho:stetho-timber:1.4.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'org.mockito:mockito-core:2.10.0'
    testCompile('com.nhaarman:mockito-kotlin:1.5.0') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    testCompile 'junit:junit:4.12'
}
